name: "Nightly build"

on:
  workflow_dispatch

  #on:
#  schedule:
#    - cron: "15 7 * * *" # 7:15 AM UTC, every day

env:
  SERVER_IMAGE: ub-22.04-irods-4.3-nightly
  CLIENT_IMAGE: ub-22.04-irods-clients-4.3-nightly

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "Fetch Tags"
        # Workaround for https://github.com/actions/checkout/issues/290
        run: |
          # Avoid git exiting when Actions runs
          git config --global --add safe.directory "$PWD"
          
          git fetch --tags --force

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: "Login to ghcr.io"
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push Docker images"
        run: |
            TAG=$(git describe --always --tags)

            # Use the default builder because buildx cannot currently build on a base image
            # that it has just built. See https://github.com/docker/buildx/issues/1453
            # We still need buildx for its --build-context feature.
            docker buildx use default

            cd docker
            make GITHUB_ACTIONS=${GITHUB_ACTIONS} GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }} ${{ env.SERVER_IMAGE }}.${TAG}
            make GITHUB_ACTIONS=${GITHUB_ACTIONS} GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }} ${{ env.CLIENT_IMAGE }}.${TAG}

            docker image prune --force
            docker images

            make push GITHUB_ACTIONS=${GITHUB_ACTIONS} GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }} ${{ env.SERVER_IMAGE }}.${TAG}
            make push GITHUB_ACTIONS=${GITHUB_ACTIONS} GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }} ${{ env.CLIENT_IMAGE }}.${TAG}
